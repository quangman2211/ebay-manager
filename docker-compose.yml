# docker-compose.yml - Production-ready configuration for eBay Manager
version: '3.8'

services:
  # FastAPI Application Service
  ebay-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: ebay-manager-api
    ports:
      - "8000:8000"
    environment:
      # Application Configuration
      - ENVIRONMENT=production
      - DEBUG=false
      - API_HOST=0.0.0.0
      - API_PORT=8000
      
      # Database Configuration
      - DATABASE_URL=postgresql://ebay_user:${POSTGRES_PASSWORD}@ebay-database:5432/ebay_manager
      - DATABASE_POOL_SIZE=20
      - DATABASE_MAX_OVERFLOW=30
      
      # Redis Configuration
      - REDIS_URL=redis://ebay-redis:6379/0
      - REDIS_SESSION_DB=1
      - REDIS_CACHE_DB=2
      - REDIS_JOB_DB=3
      
      # Security Configuration
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - JWT_REFRESH_TOKEN_EXPIRE_DAYS=7
      
      # File Upload Configuration
      - UPLOAD_MAX_SIZE=100MB
      - UPLOAD_PATH=/app/uploads
      - ALLOWED_FILE_TYPES=csv,xlsx,xls
      
      # Background Jobs Configuration
      - MAX_WORKER_THREADS=4
      - JOB_TIMEOUT_SECONDS=300
      - JOB_RETRY_ATTEMPTS=3
      
      # Logging Configuration
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - LOG_FILE=/app/logs/api.log
      - LOG_MAX_SIZE=50MB
      - LOG_BACKUP_COUNT=5
      
    volumes:
      - ebay_uploads:/app/uploads
      - ebay_logs:/app/logs
      
    depends_on:
      - ebay-database
      - ebay-redis
      
    networks:
      - ebay-network
      
    restart: unless-stopped
    
    # Health check configuration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    # Resource limits (appropriate for 30-account scale)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # PostgreSQL Database Service
  ebay-database:
    image: postgres:15-alpine
    container_name: ebay-manager-database
    environment:
      # PostgreSQL Configuration
      - POSTGRES_DB=ebay_manager
      - POSTGRES_USER=ebay_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
      
      # Performance Configuration
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements
      - POSTGRES_MAX_CONNECTIONS=100
      - POSTGRES_SHARED_BUFFERS=256MB
      - POSTGRES_EFFECTIVE_CACHE_SIZE=1GB
      - POSTGRES_MAINTENANCE_WORK_MEM=64MB
      - POSTGRES_CHECKPOINT_COMPLETION_TARGET=0.9
      - POSTGRES_WAL_BUFFERS=16MB
      - POSTGRES_DEFAULT_STATISTICS_TARGET=100
      
    volumes:
      - ebay_database_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ebay_logs:/var/log/postgresql
      
    networks:
      - ebay-network
      
    restart: unless-stopped
    
    # Health check for database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ebay_user -d ebay_manager"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
      
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    
    # Security hardening
    command: >
      postgres
      -c log_statement=all
      -c log_destination=stderr
      -c log_min_duration_statement=1000
      -c log_line_prefix='%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
      -c log_lock_waits=on
      -c log_temp_files=0

  # Redis Cache & Session Store
  ebay-redis:
    image: redis:7-alpine
    container_name: ebay-manager-redis
    environment:
      # Redis Configuration
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_MAXMEMORY=512mb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
      - REDIS_TIMEOUT=300
      - REDIS_TCP_KEEPALIVE=60
      
    volumes:
      - ebay_redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ebay_logs:/var/log/redis
      
    networks:
      - ebay-network
      
    restart: unless-stopped
    
    # Health check for Redis
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
      
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    
    # Redis configuration with authentication
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --appendonly yes
      --appendfsync everysec

# Network Configuration
networks:
  ebay-network:
    name: ebay-manager-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

# Volume Configuration
volumes:
  # Database persistent storage
  ebay_database_data:
    name: ebay_database_data
    driver: local
    
  # Redis persistent storage  
  ebay_redis_data:
    name: ebay_redis_data
    driver: local
    
  # File uploads storage
  ebay_uploads:
    name: ebay_uploads
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${UPLOAD_PATH:-./uploads}
      
  # Centralized logging
  ebay_logs:
    name: ebay_logs
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOG_PATH:-./logs}